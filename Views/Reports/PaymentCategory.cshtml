@using NewDepot.Models
@model List<PaymentReportModel>


@{
    ViewBag.Title = "Payment Category Report";
    Layout = "~/Views/Shared/_ElaLayout.cshtml";
    int counter = 0;
    int cnt = 0;
    string[] alerttypes = new[] { "alert-info", "alert-success", "alert-warning", "alert-danger", "alert-info", "alert-success", "alert-warning", "alert-danger", "alert-info", "alert-success", "alert-warning", "alert-danger" };

}
<div class="row">
    <div style="margin-bottom: 2em;">
        <div class="title">
            <h3>@ViewBag.Title</h3>
        </div>

    </div>
</div>
<div class="text-center row" style="">
    <div class="col-md-2" style="background-color: peru; color:white; margin: 0.2em; padding: 5px; text-align:center !important; font-weight: bold; border-radius: 5px;">
        <div style="padding-top:30px">Total Amount</div>
        <div style="font-size: large;">₦ @Model.Sum(x => x.TotalCatAmount).ToString("N2")</div>
    </div>
    <div class="row col-md-10">
        @foreach (var pay in Model.GroupBy(x => x.Category))
        {
            <div class="col-md-2 @alerttypes[cnt] " style="height:70px;  margin: 0.2em; padding: 5px; text-align:center !important; font-weight: bold; border-radius: 5px;">
                <div style="font-size: small;">@pay.Key</div>
                <div style="font-size: large;">₦ @pay.Sum(x => x.TotalCatAmount).ToString("N2")</div>
            </div>
            cnt++;
        }
    </div>
    </div>
<div class="row">

    <div class="col-md-12" style="margin-top: 2em;">
        <table class="table table-striped table-hover dataTable">
            <thead>
                <tr>
                    <th>Category</th>
                    <th>FG</th>
                    <th>Processing Fee</th>
                    <th>NMDPRA (CORC)</th>
                    <th>NMDPRA (IGR)</th>
                    <th>Contractor</th>
                    <th class="text-center">Total Amount (₦)</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderByDescending(a => a.Date))
                {
                    counter++;
                    <tr>
                        <td>@item.Category</td>
                        <td>@Convert.ToInt64(item.FG).ToString("N2")</td>
                        <td>@Convert.ToInt64(item.ProcessingFee).ToString("N2")</td>
                        @*<td>@Convert.ToInt16(item.NMDPRACORC).ToString("N2")</td>*@
                        <td>@item.NMDPRACORC</td>
                        @*<td>@Convert.ToInt64(item.NMDPRAIGR).ToString("N2")</td>*@
                        <td>@int.Parse(item.NMDPRAIGR).ToString("N2")</td>
                        <td>@item.Contractor</td>
                        <td>@item.TotalCatAmount.ToString("N2")</td>
                        <td>
                            <a href="/Reports/PaymentBreakDown/?category=@item.Category" class="btn btn-xs btn-info">View Details <i class="icon-eye"></i></a>
                        </td>
                    </tr>

                }
            </tbody>
        </table>
        <br/>
        <hr/>
        <div class="marg" style="margin-top:25px"></div>
        <div class="row">
            <div class="col-lg-8">
                <h4 class="text-info text-center">
                    <i class="fa fa-line-chart"></i> Payment Bar Chart
                </h4>
                <div id="PaymentBarChart" style="width:100%; height:500px"></div>

            </div>
            <div class="col-lg-4">
                <h4 class="text-info text-center">
                    <i class="fa fa-line-chart"></i> Payment Pie Chart
                </h4>
                <div id="PaymentPieChart" style="width:100%; height:500px"></div>

            </div>

        </div>
        @*<div id="paymentReportLocationChart">

        </div>*@
        <br />
    </div>
</div>


<link rel="stylesheet" href="~/Content/select2.min.css" />
<link rel="stylesheet" href="~/Content/bootstrap-datepicker.min.css" />
@section scripts{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.8/js/select2.min.js" defer></script>
    <script src="@Url.Content("/Scripts/js/moment/moment.min.js")"></script>
    <script src="@Url.Content("/Scripts/js/datepicker/daterangepicker.js")"></script>
    <script src="~/Scripts/select2.min.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>

    <script>
        $(document).ready(function () {
            $(".dataTable").dataTable({
                dom: 'Blfrtip',
            });

            $("#mindate,#maxdate").datepicker({
                "onSelect": function (date) {
                }, changeMonth: true, changeYear: true, dateFormat: "M d yy"
            });

            $(".state").select2({
                "placeholder": "Select single/multiple state(s)"
            });



            //Payment Chart
            am4core.ready(function () {

                $.ajax({
                    type: "POST",
                    url: "/Charts/PaymentCategoryChart",
                    contentType: false,
                    processData: false,
                    async: false,
                    success: function (response) {
                        var chartData = [];

                        for (var i = 0; i < response.length; i++) {
                            chartData.push({
                                totalAmount: response[i].totalCatAmount,
                                category: response[i].category,

                            });

                        }

                        am4core.useTheme(am4themes_spiritedaway);

                        // Create chart instance
                        var chart = am4core.create("PaymentPieChart", am4charts.PieChart);
                        chart.hiddenState.properties.opacity = 0;

                        // Add chart title

                        chart.data = chartData;
                        chart.legend = new am4charts.Legend();
                        chart.exporting.menu = new am4core.ExportMenu();
                        var series = chart.series.push(new am4charts.PieSeries3D());
                        series.dataFields.value = "totalAmount";
                        series.dataFields.category = "category";
                        series.dataFields.valueYShow = "totalAmount";
                        series.labels.template.text = "{totalAmount}";

                    }
                });

            })

            am4core.ready(function () {

                $.ajax({
                    type: "POST",
                    url: "/Charts/PaymentStateChart",
                    contentType: false,
                    processData: false,
                    async: false,
                    success: function (response) {
                        var chartData = [];

                        for (var i = 0; i < response.length; i++) {
                            chartData.push({
                                totalAmount: response[i].totalCatAmount,
                                stateName: response[i].stateName,

                            });

                        }

                        am4core.useTheme(am4themes_spiritedaway);

                        // Create chart instance
                        var chart = am4core.create("PaymentBarChart", am4charts.XYChart3D);
                        chart.hiddenState.properties.opacity = 0;

                        chart.data = response;

                        chart.legend = new am4charts.Legend();
                        chart.exporting.menu = new am4core.ExportMenu();
                        chart.legend.position = 'top'
                        chart.legend.paddingBottom = 20
                        chart.legend.labels.template.maxWidth = 95


                        // Create category axis
                        var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
                        categoryAxis.dataFields.category = "stateName";

                        // Create value axis
                        var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
                        valueAxis.title.text = "Amount";
                        valueAxis.renderer.minLabelPosition = 0.01;

                        // Create series
                        var series1 = chart.series.push(new am4charts.LineSeries());
                        series1.dataFields.valueY = "totalAmount";
                        series1.dataFields.categoryX = "stateName";
                        series1.name = "Payment Chart According To State";
                        series1.bullets.push(new am4charts.CircleBullet());
                        series1.tooltipText = "{name} in {categoryX}: {valueY}";
                        series1.legendSettings.valueText = "{valueY}";
                        series1.visible = false;

                        // Add chart cursor
                        chart.cursor = new am4charts.XYCursor();
                        chart.cursor.behavior = "zoomY";


                        let hs1 = series1.segments.template.states.create("hover")
                        hs1.properties.strokeWidth = 5;
                        series1.segments.template.strokeWidth = 1;


                        // Add legend
                        chart.legend = new am4charts.Legend();
                        chart.legend.itemContainers.template.events.on("over", function (event) {
                            var segments = event.target.dataItem.dataContext.segments;
                            segments.each(function (segment) {
                                segment.isHover = true;
                            })
                        })

                        chart.legend.itemContainers.template.events.on("out", function (event) {
                            var segments = event.target.dataItem.dataContext.segments;
                            segments.each(function (segment) {
                                segment.isHover = false;
                            })
                        })
                    },
                    error: function (response) {
                        alert("Opps.... An error occured, please try again later.");
                    },
                    complete: function () {

                    }


                }
                )
            });







        });
    </script>

}
