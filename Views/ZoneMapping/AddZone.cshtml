@model NewDepot.Models.ZonalOffice


@{
    ViewBag.Title = "AddZone";
    Layout = null;
}


@using (Html.BeginForm("AddZone", "ZoneMapping", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="modal-body">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <label class="control-label col-md-4">Select Branch</label>
            <div class="col-md-8">
                <select id="BranchId" name="BranchId" required class="form-control">
                    @if (!string.IsNullOrEmpty(Model.BranchName))
                    {
                        <option value="@Model.BranchId">@Model.BranchName</option>
                    }
                    else
                    {
                        <option value="">Select Branch</option>
                    }

                    @foreach (var item in (List<Branch>)ViewBag.branch)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>

                @*@Html.EditorFor(model => model.country_id, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.country_id, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Name, "Zone Name", htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">

                <select id="Status" name="Status" required class="form-control">
                    @if (Model.Status == 0)
                    {
                        <option value="0">Not Active</option>
                    }
                    else
                    {

                        <option value="1">Active</option>
                    }
                    <option value="1">Active</option>
                    <option value="0">Not Active</option>
                </select>

                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

    </div>
    <div class="clear"></div>
    <div class="modal-footer">
        <div class="txtcenter">
            <button class="btn btn-default" data-dismiss="modal">Close</button>
            <input type="submit" value="Create Rule" class="btn btn-success" />
        </div>
    </div>
}