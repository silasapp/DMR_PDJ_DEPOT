@using NewDepot.Helpers;
@model IEnumerable<NewDepot.Models.BothDocuments>;


@{
    ViewData["Title"] = "ReSubmit Application Documents ";
    Layout = "~/Views/Shared/_ClientLayout.cshtml";
    //ElpsServices services = new ElpsServices();
}

<style>
     
    
</style>


<div class="" id="divReDocumentUpload">

    <div class="">
        <div class="row" id="BackImage">

            <br />
            <h3 class="DashCompanyName">  @ViewBag.Title </h3>
            <hr />
        </div>
    </div>
    <br />

    <div class="card-title text-right">
        <h5><b> @ViewData["FacilityName"] (@ViewData["AppType"] => @ViewData["AppStage"]) </b> <span> Ref. NO : <b class="text-primary">@ViewData["AppReference"]</b> </span> </h5> <hr />
        <input type="text" hidden id="txtAppID" name="txtAppID" value="@ViewData["AppID"]" />
        <input type="text" hidden id="txtCompanyElpsID" name="txtCompanyElpsID" value="@ViewData["CompanyElpsID"]" />
        <input type="text" hidden id="FacilityElpsID" name="FacilityElpsID" value="@ViewData["FacilityElpsID"]" />
        <input type="text" hidden id="txtURL" name="txtURL" value="@ElpsServices._elpsBaseUrl" />
        <input type="text" hidden id="txtHash" name="txtHash" value="@ElpsServices.appHash" />
        <br />

        <div class="text-left">

            <p><b>Please Note:</b></p>
            <p>
                1.  All documents listed below are required and must be uploaded. Subsequently,
                other documents may be needed and will be added to this list.
            </p>
            <p>2. The MAX file size allowed is 4MB per document, any file greater than this will not be uploaded.</p>
            <p>
                3. Only JPEG, PNG, JPG, and PDF file types are allowed on this platform.
            </p>
        </div>

    </div>

    <hr />

    <div class="alert alert-danger">

        <h5> Rejection comment(s)</h5>
        <hr />

        <p> @ViewData["DeskComment"] </p>
    </div>

    <br />

    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-hover" style="font-size:small" id="docTable">
                <thead>
                    <tr style="font-weight:bolder;">
                        <th> Document Type</th>
                        <th> Source</th>
                        <th> Type Name</th>
                        <th> Available </th>
                        <th> Change </th>
                    </tr>
                </thead>

                <tbody>
                    <tr>
                        <td colspan="5"><h3>Existing Document(s)</h3></td>
                    </tr>
                    @foreach (var bothDoc in Model)
                    {
                        foreach (var presentDoc in bothDoc.presentDocuments)
                        {
                            var present = presentDoc.Present == true ? "Uploaded" : "Not Uploaded";

                            var file_icon = "";
                            var font_png_icon = "fa-file-image";
                            var font_pdf_icon = "fa-file-pdf text-danger";

                            var font_file_icon = "fa-file text-info";

                            var img_link = /*"elpsdemo.dpr.gov.ng" +*/ presentDoc.Source;
                            if (presentDoc.Source != null)
                            {
                                file_icon = presentDoc.Source.EndsWith(".png") == true ? font_png_icon :
                                       presentDoc.Source.EndsWith(".PNG") == true ? font_png_icon :
                                       presentDoc.Source.EndsWith(".jpg") == true ? font_png_icon :
                                       presentDoc.Source.EndsWith(".JPG") == true ? font_png_icon :
                                       presentDoc.Source.EndsWith(".jpeg") == true ? font_png_icon :
                                       presentDoc.Source.EndsWith(".JPEG") == true ? font_png_icon :
                                       presentDoc.Source.EndsWith(".pdf") == true ? font_pdf_icon :
                                       presentDoc.Source.EndsWith(".PDF") == true ? font_pdf_icon : font_file_icon;
                            }
                            <tr class="" id="docRow_@presentDoc.LocalDocID">

                                <td>
                                    @presentDoc.DocType<br />Document

                                    <input type="text" hidden name="txtLocalDocID[]" value="@presentDoc.LocalDocID" required />
                                    <input type="text" hidden name="txtCompDocElpsID[]" id="doc_@presentDoc.LocalDocID" value="@presentDoc.CompElpsDocID" required />
                                    <input type="text" hidden id="docType_@presentDoc.LocalDocID" value="@presentDoc.DocType" required />
                                    <input type="text" hidden id="docTypeID_@presentDoc.LocalDocID" value="@presentDoc.DocTypeID" required />
                                    <input type="text" hidden name="txtDocSource[]" id="docSource_@presentDoc.LocalDocID" value="@presentDoc.Source" required />

                                </td>

                                <td class="text-center">
                                    <a href="@img_link" target="_blank" style="color:black" title="Click to view document">
                                        <i class="fa @file_icon fa-5x"></i>
                                    </a>
                                    <br />
                                    <small class="text-info"><b> View Doc </b></small>
                                    <br />

                                    <button class="btn btn-xs btn-danger" onclick="DeleteDocument(@presentDoc.CompElpsDocID, @presentDoc.LocalDocID, '@presentDoc.DocType')"> <i class="fa fa-trash-o"> </i> Delete Doc </button>
                                </td>

                                <td style="">
                                    @presentDoc.TypeName
                                    <div id="Error_@presentDoc.LocalDocID">

                                    </div>
                                    <div id="progress_@presentDoc.LocalDocID" class="progress" style="height: 20px;">
                                        <div class="progress-bar progress-bar-primary" role="progressbar"></div>
                                    </div>
                                </td>


                                <td style="color:black"><b>@present</b></td>
                                <td>
                                    <button class="btn btn-info btn-sm " onclick="updateBrowse(@presentDoc.LocalDocID)"> <i class="fa fa-cloud-upload-alt"> </i> Change Doc </button>
                                    <input type="file" hidden class="updatefile" id="Update_@presentDoc.LocalDocID" onclick="updateFile(this, @presentDoc.LocalDocID);" name="Upload" accept="image/jpg,image/png,image/jpeg,application/pdf" />
                                </td>

                            </tr>
                        }
                    }
                    <tr>
                        <td colspan="5"><h3>Required Document(s)</h3></td>
                    </tr>                    @foreach (var bothDoc in Model)
                    {


                        foreach (var missingDoc in bothDoc.missingDocuments)
                        {
                            var present = missingDoc.Present == true ? "Uploaded" : "Not Uploaded";

                            <tr style="font-weight:bold" id="docRow2_@missingDoc.LocalDocID">

                                <td>
                                    @missingDoc.DocType Document

                                    <input type="text" hidden value="@missingDoc.LocalDocID" required />
                                    <input type="text" hidden name="missingCompElpsDocID[]" value="@missingDoc.CompElpsDocID" required />
                                    <input type="text" hidden id="docType_@missingDoc.LocalDocID" value="@missingDoc.DocType" required />
                                    <input type="text" hidden id="docTypeID_@missingDoc.LocalDocID" value="@missingDoc.DocTypeID" required />
                                </td>

                                <td class="text-center"><i class="fa fa-exclamation-triangle fa-3x text-warning"></i></td>

                                <td style="font-size:small">
                                    @missingDoc.TypeName
                                    <div id="Error2_@missingDoc.LocalDocID"> </div>
                                    <div id="progress2_@missingDoc.LocalDocID" class="progress" style="height: 20px;">
                                        <div class="progress-bar progress-bar-primary" role="progressbar"></div>
                                    </div>
                                </td>
                                <td class="text-danger">@present</td>
                                <td>

                                    <button class="btn btn-danger btn-sm " onclick="OpenUploadBrowse(@missingDoc.LocalDocID)"> <i class="fa fa-cloud-upload-alt"> </i> Upload Doc </button>
                                    <input type="file" hidden class="uploadfile" id="Upload_@missingDoc.LocalDocID" onclick="uploadFile(this, @missingDoc.LocalDocID);" name="Upload" accept="image/jpg,image/png,image/jpeg,application/pdf" />
                                </td>

                            </tr>
                        }
                    }

                </tbody>
            </table>
        </div>
    </div>

    <hr />

    <br />

    <div class="text-center">
        <button class="btn btn-outline-primary" id="" data-toggle="modal" data-backdrop="static" data-keyboard="false" data-target="#AdditionalAppsModal">Click to Add more documents </button>
    </div>
    <br />
    <hr />

    <div class="text-center">
        <input type="button" class="btn btn-success" id="btnReSubmitDocuments" value="Resubmit Application" />
    </div>

    <br />

    <div id="divUploadDocInfo"> </div>

</div>


<div class="modal" id="AdditionalAppsModal">
    <div class="modal-dialog modal-lg" style="overflow-y: initial">
        <div class="modal-content" id="">
            <div class="modal-header">
                <h4 class="modal-title"> Additional Application documents </h4>

                <button type="button" class="close" data-dismiss="modal" aria-label="Close" onclick="Reload()">
                    <span aria-hidden="true" class="btn btn-primary btn-sm">Save Chages & Close</span>
                </button>
            </div>

            <div class="modal-body" style="overflow-y: auto !important;height: 80vh;">

                <div class="table-responsive">
                    <table class="table table-bordered table-hover" style="font-size:smaller" id="OtherDocTable">
                        <thead>
                            <tr>

                                <th class="text-left"> Select Other Document(s) for this application </th>
                                <th> Action </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var apps in Model)
                            {
                                foreach (var otherDoc in apps.AdditionalDoc)
                                {
                                    <tr>
                                        <td class="text-left"> @otherDoc.DocName</td>
                                        <td>  <button class="btn btn-sm btn-info" id="@otherDoc.AppDocID" onclick="AddMoreDoc(@otherDoc.AppDocID)"> <i class="fas fa-file-import"> </i>  Add </button> </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>

        </div>
    </div>
</div>





@section Scripts {
    <script type="text/javascript">

    function OpenUploadBrowse(id) {
        $("#Upload_" + id).click();
    }
    function updateFile(fileInput, fileID) {

        $("#Error_" + fileID).html("");
        var documentID = $("#doc_" + fileID).val();
        var documentTypeID = $("#docTypeID_" + fileID).val();
        var docType = $("#docType_" + fileID).val();

        var txtUrl = $("#txtURL").val();

        var uploadLocation = '';

        if (docType === "Facility") {
            debugger;
            uploadLocation = txtUrl + 'api/FacilityDocument/UpdateFile/' + documentTypeID + '/@ViewData["FacilityElpsID"]' + '?docid=' + documentID;
        }
        else {


            var uploadLocation = txtUrl + 'api/CompanyDocument/UpdateFile/' + documentID + '/@ViewData["CompanyElpsID"]' + '/' + docType.toLowerCase() + '?docid=' + documentID;
        }

        $(".updatefile").fileupload({
            dataType: 'json',
            url: uploadLocation,
            done: function (e, data) {
                $("#docRow_" + fileID).removeClass("Uploadloader");
                $("#Update_" + fileID).val('');
                //DeleteOldDocument(documentID, fileID); // deleteng old document
                $("#docTable").load(location.href + " #docTable");

                $("#Error_" + fileID).html("<b style='color:blue'> Changing... Please wait.</b>");

                $("#Error_" + fileID).html("<b style='color:green'> Successfully Updated...Please wait </b>");

            },
            fail: function (e, data) {
                $.each(data.messages, function (index, error) {
                    if (error.toLowerCase().indexOf('bytes exceed file size' > 0)) {
                        $("#Error_" + fileID).html("");
                        $("#Error_" + fileID).html("<span class='text-danger'> Upload file error: Max. File size (4MB) Exceeded OR Invalid file type was selected (only pdf, jpg, jpeg or png) </span>");
                        $("#Update_" + fileID).val('');
                    }
                    else {
                        $("#Error_" + fileID).html("");
                        $("#Error_" + fileID).html("<span class='text-danger'> " + error + " </span>");
                        $("#Update_" + fileID).val('');
                    }
                });
                $("#docRow_" + fileID).removeClass("Uploadloader");

                $("#docRow_" + fileID).removeClass("Uploadloader");
                $("#Update_" + fileID).val('');
                var progBox = '#progress_' + fileID + ' .progress-bar';

                $(progBox).css(
                    'width',
                    0 + '%'
                ).text("");
            },
            progressall: function (e, data) {

                $("#docRow_" + fileID).addClass("Uploadloader");

                var progress = parseInt(data.loaded / data.total * 100, 10);

                var progBox = '#progress_' + fileID + ' .progress-bar';

                $(progBox).css(
                    'width',
                    progress + '%'
                ).text(progress + '%');
            }

        });
    }

    function uploadFile(fileInput, fileID) {

        var txtUrl = $("#txtURL").val();
        var txtHash = $("#txtHash").val();

        $("#Error2_" + fileID).html("");
        var docTypeID = $("#docTypeID_" + fileID).val().trim();
        var docType = $("#docType_" + fileID).val().trim();
        var uploadLocation = '';

        if (docType === "Facility") {
            uploadLocation = txtUrl + 'api/Facility/UploadFile/' + docTypeID + '/@ViewData["CompanyElpsID"]' + '/@ViewData["FacilityElpsID"]' + '/' + '@ElpsServices._elpsAppEmail'+'/' + txtHash + '?docName=&uniqueid=';
        }
        else {
            uploadLocation = txtUrl + 'api/UploadCompanyDoc/' + docTypeID + '/@ViewData["CompanyElpsID"]' + '/' + '@ElpsServices._elpsAppEmail'+'/'+ txtHash + '?docName=&uniqueid=';
        }
        //var baseDocUpload = 'ElpsServices._elpsBaseUrl' + "api/UploadCompanyDoc/" + Model[i].Id + "/" + ViewBag.companyId + "/" + ElpsServices._elpsAppEmail + "/" + ElpsServices.appHash;


        $(".uploadfile").fileupload({
            dataType: 'json',
            url: uploadLocation,
            done: function (e, data) {

                $("#Error2_" + fileID).html("<b style='color:blue'> Uploading... Please wait.</b>");
                $("#Upload_" + fileID).val('');
                $("#Error2_" + fileID).html("<b style='color:green'> Successfully uploaded...Please wait </b>");
                $("#docTable").load(location.href + " #docTable");
            },
            fail: function (e, data) {
                $.each(data.messages, function (index, error) {
                    if (error.toLowerCase().indexOf('bytes exceed file size' > 0)) {
                        $("#Error2_" + fileID).html("");
                        $("#Error2_" + fileID).html("<span class='text-danger'> Upload file error: Max. File size (4MB) Exceeded OR Invalid file type was selected (only pdf, jpg, jpeg or png) </span>");
                        $("#Upload_" + fileID).val('');
                    }
                    else {
                        $("#Error2_" + fileID).html("");
                        $("#Error2_" + fileID).html("<span class='text-danger'> " + error + " </span>");
                        $("#Upload_" + fileID).val('');
                    }
                });
                $("#docRow2_" + fileID).removeClass("Uploadloader");

                $("#docRow2_" + fileID).removeClass("Uploadloader");
                $("#Upload_" + fileID).val('');
                var progBox = '#progress2_' + fileID + ' .progress-bar';

                $(progBox).css(
                    'width',
                    0 + '%'
                ).text("");
            },
            progressall: function (e, data) {

                $("#docRow2_" + fileID).addClass("Uploadloader");

                var progress = parseInt(data.loaded / data.total * 100, 10);

                var progBox = '#progress2_' + fileID + ' .progress-bar';

                $(progBox).css(
                    'width',
                    progress + '%'
                ).text(progress + '%');
            }

        });

    }






    function updateBrowse(id) {
        $("#Update_" + id).click();
    }

    function updateBrowse3(id) {
        $("#Update3_" + id).click();
    }


    // already submitted document upload filemanager open
    function OpenUploadBrowse4(id) {

        $("#Upload4_" + id).click();
    }



    /*
     * Deleteing a document...
     */
    function DeleteDocument(id, fileID, DocType) {
        $.confirm({
            text: "Are you sure you want to delete this document?",
            confirm: function (button) {
                var data = new FormData();
                data.append("CompElpsDocID", id);
                data.append("DocType", DocType);
                data.append("View", "Reupload");
                $.ajax({
                    url: "/Helpers/DeleteCompanyDocument",
                    type: "POST",
                    data: data,
                    contentType: false,
                    processData: false,
                    dataType: "json",
                    cache: false,
                    success: function (response) {
                        if (response.trim() === "Network Error") {
                            $("#Error_" + fileID).html("<span class='text-danger'> No Network. Please check your network. </span>");
                        }
                        else {

                            if (response.trim() === "Document Deleted") {
                                $("#Error_" + fileID).html("<b style='color:green'> Document deleted successfully... Please wait </b>");
                                $("#docTable").load(location.href + " #docTable");
                            }
                            else {

                                $("#Error_" + fileID).html("<span class='text-danger'> Error " + response + " </span>");
                            }
                        }
                    }
                });
            },
            cancel: function (button) {
                button.fadeOut(2000).fadeIn(2000);
            },
            confirmButton: "Yes",
            cancelButton: "No"
        });

    }


    // deleting document from elps from already submitted document table
    function DeleteDocument3(id, fileID, DocType) {

        var msg = confirm("Are you sure you want to delete this document?");

        if (msg === true) {

            $.post("/Helpers/DeleteCompanyDocument", { "CompElpsDocID": id, "DocType": DocType }, function (response) {
                if (response.trim() === "Network Error") {
                    $("#Error3_" + fileID).html("<span class='text-danger'> No Network. Please check your network. </span>");
                }
                else {

                    if (response.trim() === "Document Deleted") {
                        $("#Error3_" + fileID).html("<b style='color:green'> Document deleted successfully.... Please wait. </b>");
                        $("#Update3_" + fileID).val('');
                        $("#docTable2").load(location.href + " #docTable2");
                    }
                    else {
                        $("#Error3_" + fileID).html("<span class='text-danger'> Error " + response + " </span>");
                    }
                }
            });
        }
    }



    function DeleteOldDocument(OldDocID, fileID) {

        $.post("/Helpers/DeleteCompanyDocument", { "CompElpsDocID": OldDocID }, function (response) {
            if (response.trim() === "Network Error") {
                $("#Error_" + fileID).html("<span class='text-danger'> No Network. Please check your network. </span>");
            }
            else {
                if (response.trim() === "Document Deleted") {
                    $("#Error_" + fileID).html("<b style='color:green'> Previous Document deleted successfully </b>");
                    $("#docTable").load(location.href + " #docTable");
                }
                else {
                    $("#Error_" + fileID).html("<span class='text-danger'> Error " + response + " </span>");
                }
            }
        });
    }


        function Reload() {
            location.reload(true);
        }


        // add more additional document
        function AddMoreDoc(id) {

            var app_id = $("#txtAppID").val();
            $.confirm({
                text: "Are you sure you want to add this additional document?",
                confirm: function (button) {
                    var data = new FormData();
                    data.append("AppID", app_id);
                    data.append("AppDocID", id);

                    $.ajax({
                        url: "/Application/AddMoreDocuments",
                        type: "POST",
                        data: data,
                        contentType: false,
                        processData: false,
                        dataType: "json",
                        cache: false,
                        success: function (response) {
                            if (response.trim() === "Done") {
                                $("#docTable2").load(location.href + " #docTable2");
                                alert("Document added successfully");
                            }
                            else {
                                alert(response);
                            }
                        }
                    })
                },
                cancel: function (button) {
                    button.fadeOut(2000).fadeIn(2000);
                },
                confirmButton: "Yes",
                cancelButton: "No"
            });

        }

        // removing document from already submitted documents table
        function RemoveDoc(id, rowTag) {

            var app_id = $("#txtAppID").val();
            $.confirm({
                text: "Are you sure you want to remove this additional document?",
                confirm: function (button) {
                    var data = new FormData();
                    data.append("AppID", app_id);
                    data.append("SubmitDocID", id);
                    $.ajax({
                        url: "/Application/RemoveAdditionalDocuments",
                        type: "POST",
                        data: data,
                        contentType: false,
                        processData: false,
                        dataType: "json",
                        cache: false,
                        success: function (response) {
                            if (response.trim() === "Done") {
                                alert("Document has been removed successfully");
                                $("#" + rowTag).hide(1000);
                            }
                            else {
                                alert(response);
                            }
                        }
                    })
                },
                cancel: function (button) {
                    button.fadeOut(2000).fadeIn(2000);
                },
                confirmButton: "Yes",
                cancelButton: "No"
            });

        }


    </script>
    <script>
        $(document).ready(function () {
          


            /*
            * ReSubmitting uploaded documents and application
            */
            $("#btnReSubmitDocuments").on('click', function (event) {
                event.preventDefault();

                var LocalID = document.getElementsByName('txtLocalDocID[]');
                var DocSource = document.getElementsByName('txtDocSource[]');
                var CompDocElpsID = document.getElementsByName('txtCompDocElpsID[]');
                var missingCompDocElpsID = document.getElementsByName('missingCompElpsDocID[]');
               
                var Requiredpresent = false;
                var Additionalpresent = false;

                var LocalID3 = document.getElementsByName('txtLocalDocID3[]');
                var DocSource3 = document.getElementsByName('txtDocSource3[]');
                var CompDocElpsID3 = document.getElementsByName('txtCompDocElpsID3[]');
                var SubmittedmissingCompDocElpsID = document.getElementsByName('missingCompElpsDocID4[]');
                var AppID = $("#txtAppID").val().trim();

                if (missingCompDocElpsID.length > 0) {

                    // validating missing documents
                    for (var i = 0; i < missingCompDocElpsID.length; i++) {
                        if (missingCompDocElpsID[i].value === "0" || missingCompDocElpsID[i].value === "") {
                            ErrorMessage("#divUploadDocInfo", "Please Upload all required documents");
                            break;
                        }
                        else {
                            alert("Inputs not found...");
                        }
                    }
                }
                else if (SubmittedmissingCompDocElpsID.length > 0) {

                    for (var t = 0; t < SubmittedmissingCompDocElpsID.length; t++) {
                        if (SubmittedmissingCompDocElpsID[t].value === "0" || SubmittedmissingCompDocElpsID[t].value === "") {
                            ErrorMessage("#divUploadDocInfo", "Please Upload all additional documents or remove it if not needed.");
                            break;
                        }
                        else {
                            alert("Inputs not found...");
                        }
                    }
                }
                else {

                    var data = new FormData();

                    data.append("AppID", AppID);

                    // saving uploaded documents
                    var AppDocuments = [];
                    var MissingDocuments = [];

                    for (var j = 0; j < LocalID.length; j++) {

                        AppDocuments.push({
                            "LocalDocID": LocalID[j].value.trim(),
                            "CompElpsDocID": CompDocElpsID[j].value.trim(),
                            "DocSource": DocSource[j].value.trim(),
                        });
                    }

                    for (var k = 0; k < LocalID3.length; k++) {

                        AppDocuments.push({
                            "LocalDocID": LocalID3[k].value.trim(),
                            "CompElpsDocID": CompDocElpsID3[k].value.trim(),
                            "DocSource": DocSource3[k].value.trim(),
                        });
                    }

                    for (var i = 0; i < AppDocuments.length; i++) {
                        data.append("ReSubmittedDocuments[" + i + "].LocalDocID", AppDocuments[i].LocalDocID);
                        data.append("ReSubmittedDocuments[" + i + "].CompElpsDocID", AppDocuments[i].CompElpsDocID);
                        data.append("ReSubmittedDocuments[" + i + "].DocSource", AppDocuments[i].DocSource);
                    }
                  
                    $.confirm({
                        text: "Documents uploaded. Are you sure you want to proceed?",
                        confirm: function (button) {
                            $("#divReDocumentUpload").addClass("Submitloader");

                            $.ajax({
                                type: "POST",
                                url: "/Application/ReSubmitDocuments",
                                contentType: false,
                                processData: false,
                                data: data,
                                success: function (response) {
                                    var result = response;

                                    if (result === "Resubmitted") {
                                        alert("Your application have been re-submitted successfully..");
                                        var location = window.location.origin + "/Application/MyApplications";
                                        window.location.href = location;
                                    }
                                    else {
                                        ErrorMessage("#divUploadDocInfo", result);
                                        $("#divReDocumentUpload").removeClass("Submitloader");
                                    }
                                },
                                error: function (response) {
                                    alert("An error occured during the submission of uploaded documents.");
                                    $("#divReDocumentUpload").removeClass("Submitloader");
                                },
                                complete: function () {
                                    $("#divReDocumentUpload").removeClass("Submitloader");
                                }

                            });
                        },
                        cancel: function (button) {
                            button.fadeOut(2000).fadeIn(2000);
                        },
                        confirmButton: "Yes",
                        cancelButton: "No"
                    });
                }
            });



        })
    </script>
}
<script>




    function uploadFile(fileInput, fileID) {

        var txtUrl = $("#txtURL").val();
        var txtHash = $("#txtHash").val();

        $("#Error2_" + fileID).html("");
        var docTypeID = $("#docTypeID_" + fileID).val().trim();
        var docType = $("#docType_" + fileID).val().trim();

        var uploadLocation = '';

        if (docType === "Facility") {
            uploadLocation = txtUrl + 'api/Facility/UploadFile/' + docTypeID + '/@ViewData["CompanyElpsID"]' + '/@ViewData["FacilityElpsID"]' + '/NewDepot@dpr.gov.ng/' + txtHash + '?docName=&uniqueid=';
        }
        else {
            uploadLocation = txtUrl + 'api/UploadCompanyDoc/' + docTypeID + '/@ViewData["CompanyElpsID"]' + '/NewDepot@dpr.gov.ng/' + txtHash + '?docName=&uniqueid=';
        }


        $(".uploadfile").fileupload({
            dataType: 'json',
            url: uploadLocation,
            done: function (e, data) {

                $("#Error2_" + fileID).html("<b style='color:blue'> Uploading... Please wait.</b>");
                $("#Upload_" + fileID).val('');
                $("#Error2_" + fileID).html("<b style='color:green'> Successfully uploaded... </b>");
                $("#docTable").load(location.href + " #docTable");
            },
            fail: function (e, data) {
                $.each(data.messages, function (index, error) {
                    if (error.toLowerCase().indexOf('bytes exceed file size' > 0)) {
                        $("#Error2_" + fileID).html("");
                        $("#Error2_" + fileID).html("<span class='text-danger'> Upload file error: Max. File size (4MB) Exceeded OR Invalid file type was selected (only pdf, jpg, jpeg or png) </span>");
                        $("#Upload_" + fileID).val('');
                    }
                    else {
                        $("#Error2_" + fileID).html("");
                        $("#Error2_" + fileID).html("<span class='text-danger'> " + error + " </span>");
                        $("#Upload_" + fileID).val('');
                    }
                });
                $("#docRow2_" + fileID).removeClass("Uploadloader");

                $("#docRow2_" + fileID).removeClass("Uploadloader");
                $("#Upload_" + fileID).val('');
                var progBox = '#progress2_' + fileID + ' .progress-bar';

                $(progBox).css(
                    'width',
                    0 + '%'
                ).text("");
            },
            progressall: function (e, data) {

                $("#docRow2_" + fileID).addClass("Uploadloader");

                var progress = parseInt(data.loaded / data.total * 100, 10);

                var progBox = '#progress2_' + fileID + ' .progress-bar';

                $(progBox).css(
                    'width',
                    progress + '%'
                ).text(progress + '%');
            }

        });

    }


    function updateBrowse(id) {
        $("#Update_" + id).click();
    }

    function OpenUploadBrowse(id) {
        $("#Upload_" + id).click();
    }



    /*
     * Deleteing a document...
     */
    function DeleteDocument(id, fileID, DocType) {

        var msg = confirm("Are you sure you want to delete this document?");

        if (msg === true) {

            $.post("/Helpers/DeleteCompanyDocument", { "CompElpsDocID": id, "DocType": DocType }, function (response) {
                if (response.trim() === "Network Error") {
                    $("#Error_" + fileID).html("<span class='text-danger'> No Network. Please check your network. </span>");
                }
                else {

                    if (response.trim() === "Document Deleted") {
                        $("#Error_" + fileID).html("<b style='color:green'> Document deleted successfully </b>");
                        $("#docTable").load(location.href + " #docTable");
                    }
                    else {
                        $("#Error_" + fileID).html("<span class='text-danger'> Error " + response + " </span>");
                    }
                }
            });
        }
    }



    /*
     * Deleteing pervious document when a new document is uploaded
     * NOT USED
     */
    function DeleteOldDocument(OldDocID, fileID) {

        $.post("/Helpers/DeleteCompanyDocument", { "CompElpsDocID": OldDocID }, function (response) {
            if (response.trim() === "Network Error") {
                $("#Error_" + fileID).html("<span class='text-danger'> No Network. Please check your network. </span>");
            }
            else {
                if (response.trim() === "Document Deleted") {
                    $("#Error_" + fileID).html("<b style='color:green'> Previous Document deleted successfully </b>");
                    $("#docTable").load(location.href + " #docTable");
                }
                else {
                    $("#Error_" + fileID).html("<span class='text-danger'> Error " + response + " </span>");
                }
            }
        });
    }





    // add more additional document
    function AddMoreDoc(id) {

        var app_id = $("#txtAppID").val();

        var msg = confirm("Are you sure you want to add this document to additional documents?");

        if (msg === true) {

            $.post("/Applications/AddMoreDocuments", { "AppID": app_id, "AppDocID": id }, function (response) {
                if (response.trim() === "Done") {
                    $("#docTable2").load(location.href + " #docTable2");
                    alert("Document added successfully");
                }
                else {
                    alert(response);
                }
            });
        }
    }


    function Reload() {
        location.reload(true);
    }



    // removing document from already submitted documents table
    function RemoveDoc(id, rowTag) {

        var app_id = $("#txtAppID").val();

        var msg = confirm("Are you sure you want to remove this document?");

        if (msg === true) {

            $.post("/Applications/RemoveAdditionalDocuments", { "AppID": app_id, "SubmitDocID": id }, function (response) {
                if (response.trim() === "Done") {
                    alert("Document has been removed successfully");
                    $("#" + rowTag).hide(1000);
                }
                else {
                    alert(response);
                }
            });
        }
    }

</script>